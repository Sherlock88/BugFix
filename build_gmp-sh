#!/bin/bash

# Set the variables as per your choice and environment
AF_ROOT=~/angelicfix		# AngelicFix root directory
FROM_VER=14166			# Version number of buggy version
TO_VER=14167			# Version number of fixed version
GMP_DRIVER="gmp_demo.cpp"	# GMP library driver program source code

# Set up environment
export C_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
export CPLUS_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
source $AF_ROOT/activate

# Download and extract buggy Python version
GMP_DIR="gmp-bug-"$FROM_VER"-"$TO_VER
GMP_ARCHIVE=$GMP_DIR".tar.gz"
GMP_ARCHIVE_URL="http://dijkstra.cs.virginia.edu/genprog/resources/genprog-icse2012-benchmarks/"$GMP_ARCHIVE

if [ ! -f $GMP_ARCHIVE ]; then
	echo
	echo -e '\033[1;33m'***********************'\033[0m'
	echo -e '\033[1;33m'* Downloading archive *'\033[0m'
	echo -e '\033[1;33m'***********************'\033[0m'
	wget $GMP_ARCHIVE_URL
fi

if [ ! -d $GMP_DIR ]; then
	echo
	echo -e '\033[1;33m'**********************'\033[0m'
	echo -e '\033[1;33m'* Extracting archive *'\033[0m'
	echo -e '\033[1;33m'**********************'\033[0m'
	tar -xvf $GMP_ARCHIVE
fi

# Configure and prepare Makefile
echo
echo -e '\033[1;33m'**********************'\033[0m'
echo -e '\033[1;33m'* Preparing Makefile *'\033[0m'
echo -e '\033[1;33m'**********************'\033[0m'
cp llvm-driver compile-sh $GMP_DIR/gmp
cd $GMP_DIR/gmp
chmod 777 llvm-driver
chmod 777 compile-sh
make distclean
autoreconf --force --install
./configure --disable-assembly --disable-fat --disable-shared --disable-static --disable-fft 2>&1 | tee log_configure

# Patch Makefile to disable inline assembly
echo
echo -e '\033[1;33m'**********************'\033[0m'
echo -e '\033[1;33m'* Patching Makefile *'\033[0m'
echo -e '\033[1;33m'**********************'\033[0m'
sed -i 's/#if ! defined (NO_ASM)/#define NO_ASM\n&/' longlong.h

# Replace the fixed version(s) with the buggy one(s)
# from $GMP_DIR/diffs to appropriate location(s)
echo
echo -e '\033[1;33m'***********************'\033[0m'
echo -e '\033[1;33m'* Replace source code *'\033[0m'
echo -e '\033[1;33m'***********************'\033[0m'
# echo "Replace the fixed version(s) with the buggy one(s) from $GMP_DIR/diffs to appropriate location(s)"
# read -p "Press any key to continue once you are done." -n1 -s
function replace_annotated_source() {
	annotated_source_path="$( cut -d '/' -f 3- <<< "$1" )";
	original_source_path="$( echo $annotated_source_path | sed "s/-.*//" )"
	rm -f "$original_source_path"
	cp ../diffs/"$annotated_source_path" "$original_source_path"
}

export -f replace_annotated_source
find ../diffs -name "*-$FROM_VER" -print | xargs bash -c 'replace_annotated_source "$@"' _

# Build the buggy version of gmp
echo -e "\n"
echo -e '\033[1;33m'**********************'\033[0m'
echo -e '\033[1;33m'* Build the target *'\033[0m'
echo -e '\033[1;33m'**********************'\033[0m'
./compile-sh

# Get convinced that the build works with KLEE
# gmp help should be displayed
if [ -f ".libs/libgmp.a" ]; then
	echo
	echo -e '\033[0;32m'*********************************'\033[0m'
	echo -e '\033[0;32m'* Build succeeded! Running KLEE *'\033[0m'
	echo -e '\033[0;32m'*********************************'\033[0m'
	echo "#include <iostream>" > $GMP_DRIVER
	echo "#include <gmp.h>" >> $GMP_DRIVER
	echo >> $GMP_DRIVER
	echo "using namespace std;" >> $GMP_DRIVER
	echo >> $GMP_DRIVER
	echo "int main(int argc, char* argv[]) {" >> $GMP_DRIVER
	echo "	cout << \"Entering main()\n\";" >> $GMP_DRIVER
	echo "	mpz_t result, base;" >> $GMP_DRIVER
	echo "	mpz_inits(result,base,NULL);" >> $GMP_DRIVER
	echo "	mpz_set_str(base, \"2\", 10);" >> $GMP_DRIVER
	echo "	mpz_pow_ui(result, base, 20);" >> $GMP_DRIVER
	echo "	mpz_out_str(stdout, 10, result);" >> $GMP_DRIVER
	echo "	cout << \"\nExiting main()\n\";" >> $GMP_DRIVER
	echo "	return 0;" >> $GMP_DRIVER
	echo "}" >> $GMP_DRIVER
	llvm-gcc -c -emit-llvm gmp_demo.cpp -I .
	llvm-ld gmp_demo.o -L .libs -lgmp -o gmp_demo
	klee -libc=uclibc -posix-runtime -allow-external-sym-calls gmp_demo.bc
else
	echo
	echo -e '\033[0;31m'*****************'\033[0m'
	echo -e '\033[0;31m'* Build failed! *'\033[0m'
	echo -e '\033[0;31m'*****************'\033[0m'
fi

