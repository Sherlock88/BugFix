#!/bin/bash

# Set the variables as per your choice and environment
AF_ROOT=~/angelicfix	# AngelicFix root directory
FROM_VER=69223		# Version number of buggy version
TO_VER=69224		# Version number of fixed version

# Set up environment
export C_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
export CPLUS_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
source $AF_ROOT/activate

# Download and extract buggy Python version
PYTHON_DIR="python-bug-"$FROM_VER"-"$TO_VER
PYTHON_ARCHIVE=$PYTHON_DIR".tar.gz"
PYTHON_ARCHIVE_URL="http://dijkstra.cs.virginia.edu/genprog/resources/genprog-icse2012-benchmarks/"$PYTHON_ARCHIVE

if [ ! -f $PYTHON_ARCHIVE ]; then
	echo
	echo -e '\033[1;33m'***********************'\033[0m'
	echo -e '\033[1;33m'* Downloading archive *'\033[0m'
	echo -e '\033[1;33m'***********************'\033[0m'
	wget $PYTHON_ARCHIVE_URL
fi

if [ ! -d $PYTHON_DIR ]; then
	echo
	echo -e '\033[1;33m'**********************'\033[0m'
	echo -e '\033[1;33m'* Extracting archive *'\033[0m'
	echo -e '\033[1;33m'**********************'\033[0m'
	tar -xvf $PYTHON_ARCHIVE
fi

# Configure and prepare Makefile
echo
echo -e '\033[1;33m'**********************'\033[0m'
echo -e '\033[1;33m'* Preparing Makefile *'\033[0m'
echo -e '\033[1;33m'**********************'\033[0m'
cp llvm-driver compile-sh $PYTHON_DIR/python
cd $PYTHON_DIR/python
chmod 777 llvm-driver
chmod 777 compile-sh
make distclean
./configure --disable-shared --without-threads

# Patch Makefile to prevent execution of Parsen/pgen$(EXE)
# $(PGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)
echo
echo -e '\033[1;33m'**********************'\033[0m'
echo -e '\033[1;33m'* Pathching Makefile *'\033[0m'
echo -e '\033[1;33m'**********************'\033[0m'
sed -i "s/\(		\)\(.(PGEN)\)/\1#\2/" Makefile

# Replace the fixed version(s) with the buggy one(s)
# from $PYTHON_DIR/diffs to appropriate location(s)
echo
echo -e '\033[1;33m'***********************'\033[0m'
echo -e '\033[1;33m'* Replace source code *'\033[0m'
echo -e '\033[1;33m'***********************'\033[0m'
function replace_annotated_source() {
	annotated_source_path="$( cut -d '/' -f 3- <<< "$1" )";
	original_source_path="$( echo $annotated_source_path | sed "s/-.*//" )"
	rm -f "$original_source_path"
	cp ../diffs/"$annotated_source_path" "$original_source_path"
}

export -f replace_annotated_source
find ../diffs -name "*-$FROM_VER" -print | xargs bash -c 'replace_annotated_source "$@"' _

# Build the buggy version of Python
echo -e "\n"
echo -e '\033[1;33m'**********************'\033[0m'
echo -e '\033[1;33m'* Build the target *'\033[0m'
echo -e '\033[1;33m'**********************'\033[0m'
./compile-sh

# Get convinced that the build works with KLEE
# Python help should be displayed
if [ -f "python.bc" ]; then
	echo -e '\033[0;32m'*********************************'\033[0m'
	echo -e '\033[0;32m'* Build succeeded! Running KLEE *'\033[0m'
	echo -e '\033[0;32m'*********************************'\033[0m'
	klee -libc=uclibc -posix-runtime -allow-external-sym-calls python.bc -h
else
	echo -e '\033[0;31m'*****************'\033[0m'
	echo -e '\033[0;31m'* Build failed! *'\033[0m'
	echo -e '\033[0;31m'*****************'\033[0m'
fi
